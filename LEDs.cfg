



[gcode_macro _led_vars]
# User settings for the StealthBurner status leds. You can change the status colors and led
# configurations for the logo and nozzle here.
  variable_config: { 
    'effects': 'False',
    }


#What n When
#  'ready', # Printer is ready to receive a job
#  'filament_load', # Loading filament
#  'filament_unload', # Unloading filament
#  'bed_heating', # Waiting for the bed to reach target
#  'chamber_heating', # Waiting for the chamber to reach target
#  'homing', # Homing any axis
#  'leveling_gantry', # Performing quad gantry-leveling
#  'calibrating_z', # Performing z-tilt adjustment
#  'meshing', # Calibrating a bed mesh
#  'extruder_heating', # Waiting for the extruder to reach target
#  'purging', # Printing purge line
#  'printing', # Actively printing
#  'pausing', # Print is paused
#  'cancelling', # Print is being cancelled
#  'completing', # Print completed
    
variable_leds: { 
    'display' : { 
      'led': 'displayStatus',
      'states': {
        'default':          { 'colour': 'yellow', 'dimm': 0.25 },
        'ready':            { 'colour': 'yellow', 'dimm': 0.25 },
        'filament_load':    { 'colour': 'cyan',   'dimm': 0.50 },
        'filament_unload':  { 'colour': 'cyan',   'dimm': 0.50 },
        'bed_heating':      { 'colour': 'red',    'dimm': 0.90 },
        'chamber_heating':  { 'colour': 'red',    'dimm': 0.90 },
        'homing':           { 'colour': 'green',  'dimm': 0.90 },
        'leveling_gantry':  { 'colour': 'green',  'dimm': 0.90 },
        'calibrating_z':    { 'colour': 'green',  'dimm': 0.90 },
        'meshing':          { 'colour': 'green',  'dimm': 0.90 },
        'extruder_heating': { 'colour': 'yellow', 'dimm': 0.25 },
        'purging':          { 'colour': 'pink',   'dimm': 0.25 },
        'printing':         { 'colour': 'blue',   'dimm': 0.25 },
        'pausing':          { 'colour': 'yellow', 'dimm': 0.90 },
        'cancelling':       { 'colour': 'red',    'dimm': 0.90 },
        'completing':       { 'colour': 'blue',   'dimm': 0.90 },

      },
    },
    'chamber' : { 
      'led': 'chamber',
      'states': {
        'default':          { 'colour': 'white',  'dimm': 0.25 },
        'ready':            { 'colour': 'off' },
        'filament_load':    { 'colour': 'cyan',   'dimm': 0.50 },
        'filament_unload':  { 'colour': 'cyan',   'dimm': 0.50 },
        'bed_heating':      { 'colour': 'red',    'dimm': 0.90 },
        'chamber_heating':  { 'colour': 'red',    'dimm': 0.90 },
        'homing':           { 'colour': 'green',  'dimm': 0.90 },
        'leveling_gantry':  { 'colour': 'green',  'dimm': 0.90 },
        'calibrating_z':    { 'colour': 'green',  'dimm': 0.90 },
        'meshing':          { 'colour': 'green',  'dimm': 0.90 },
        'extruder_heating': { 'colour': 'yellow', 'dimm': 0.25 },
        'pausing':          { 'colour': 'white',  'dimm': 0.50 },
        'cancelling':       { 'colour': 'yellow', 'dimm': 0.90 },

      },
    },
  }

variable_colours: {
        'displayStatus':      { # Colours for logo states
          'red':       { 'r': 1.000, 'g': 0.000, 'b': 0.000, 'w': 0.000 },
          'green':     { 'r': 0.000, 'g': 1.000, 'b': 0.000, 'w': 0.000 },
          'blue':      { 'r': 0.000, 'g': 0.000, 'b': 1.000, 'w': 0.000 },
          'cyan':      { 'r': 0.000, 'g': 1.000, 'b': 1.000, 'w': 0.000 },
          'pink':      { 'r': 1.000, 'g': 0.000, 'b': 1.000, 'w': 0.000 },
          'yellow':    { 'r': 1.000, 'g': 1.000, 'b': 0.000, 'w': 0.000 },
          'amber':     { 'r': 1.000, 'g': 0.649, 'b': 0.000, 'w': 0.000 },
          'emerald':   { 'r': 0.157, 'g': 0.447, 'b': 0.200, 'w': 0.000 },
          'orange':    { 'r': 1.000, 'g': 0.549, 'b': 0.000, 'w': 0.000 },

          'off':       { 'r': 0.000, 'g': 0.000, 'b': 0.000, 'w': 0.000 },
          'white':     { 'r': 1.000, 'g': 1.000, 'b': 1.000, 'w': 0.000 },
        },
        'chamber':      { # Colours for warehouse
          'red':       { 'r': 1.000, 'g': 0.000, 'b': 0.000, 'w': 0.000 },
          'green':     { 'r': 0.000, 'g': 1.000, 'b': 0.000, 'w': 0.000 },
          'blue':      { 'r': 0.000, 'g': 0.000, 'b': 1.000, 'w': 0.000 },
          'cyan':      { 'r': 0.000, 'g': 1.000, 'b': 1.000, 'w': 0.000 },
          'pink':      { 'r': 1.000, 'g': 0.000, 'b': 1.000, 'w': 0.000 },
          'yellow':    { 'r': 1.000, 'g': 1.000, 'b': 0.000, 'w': 0.000 },
          'amber':     { 'r': 1.000, 'g': 0.649, 'b': 0.000, 'w': 0.000 },
          'emerald':   { 'r': 0.157, 'g': 0.447, 'b': 0.200, 'w': 0.000 },
          'orange':    { 'r': 1.000, 'g': 0.549, 'b': 0.000, 'w': 0.000 },

          'off':       { 'r': 0.000, 'g': 0.000, 'b': 0.000, 'w': 0.000 },
          'white':     { 'r': 0.000, 'g': 0.000, 'b': 0.000, 'w': 1.000 },
        },

  }
gcode:    # This section is required.  Do Not Delete.



[gcode_macro _set_leds]
gcode:
    {% set red = params.RED|default(0)|float %}
    {% set green = params.GREEN|default(0)|float %}
    {% set blue = params.BLUE|default(0)|float %}
    {% set white = params.WHITE|default(0)|float %}
    {% set led = params.LED|string %}

    {% set transmit_last = params.TRANSMIT|default(1) %}

    {% if params.IDX %}      
      {% set idx = (params.IDX|string).split(',')|default([]) %}
      {% for led_index in idx %}
        {% set transmit=transmit_last if loop.last else 0 %}
#        m118 set_led led={led} red={red} green={green} blue={blue} white={white} index={led_index} transmit={transmit}
        set_led led={led} red={red} green={green} blue={blue} white={white} index={led_index} transmit={transmit}
      {% endfor %}
    {% else %}
#        m118 set_led led={led} red={red} green={green} blue={blue} white={white} transmit={transmit_last}
        set_led led={led} red={red} green={green} blue={blue} white={white} transmit={transmit_last}
    {% endif %}

[gcode_macro set_leds_by_name]
gcode:
    {% set leds_name = params.NAME %}
    {% set led = printer["gcode_macro _led_vars"].leds[leds_name]['led'] %}
    {% set start = printer["gcode_macro _led_vars"].leds[leds_name]['start']|default(0)|int %}
    {% set count = printer["gcode_macro _led_vars"].leds[leds_name]['count']|default(0)|int %}
    {% set transmit_last = params.TRANSMIT|default(1) %}
    {% set colour = printer["gcode_macro _led_vars"].colours[led][params.COLOUR|default('off')] %}
    {% set dimm = params.DIMM|default(1.0)|float %}

#    M118 leds_name: {leds_name},  led: {led}, start: {start}, count: {count}, colour: {colour}

    {% set red = params.RED|default(colour.r*dimm)|float %}    {% set green = params.GREEN|default(colour.g*dimm)|float %}
    {% set blue = params.BLUE|default(colour.b*dimm)|float %}
    {% set white = params.WHITE|default(colour.w*dimm)|float %}

    {% if count > 0 %}
    {% for idx in range(start,start+count) %}
      {% set transmit=transmit_last if loop.last else 0 %}
      _set_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}
    {% endfor %}
    {% else %}
      _set_leds led={led} red={red} green={green} blue={blue} white={white} transmit={transmit_last}
    {% endif %}



[gcode_macro set_leds_by_state]
gcode:
  {% set state = params.STATE|default('off')|lower() %}
  {% set leds = printer["gcode_macro _led_vars"].leds %}
  {% set config = printer["gcode_macro _led_vars"].config %}

  {% for idx,data in leds.items() %}
    {% if data['states'] %}
    
#      {% set def_state_info = data.states.default %}
      {% set state_info = data.states[state]|default(data.states.default) %}
      RESPOND PREFIX="SET_LEDS_BY_STATE" msg="rawparams: {rawparams}, {idx}|{state} -> {state_info}}"

      {% if state_info.colour %}
        SET_LEDS_BY_NAME NAME={idx} COLOUR={state_info.colour} {% if state_info.dimm %} DIMM={state_info.dimm} {% endif %}
      {% else %}
        RESPOND PREFIX="SET_LEDS_BY_NAME" msg="NAME={idx} RED={state_info.r} GREEN={state_info.g} BLUE={state_info.b} {% if state_info.w %} WHITE={state_info.w} {% endif %}"
        SET_LEDS_BY_NAME NAME={idx} RED={state_info.r} GREEN={state_info.g} BLUE={state_info.b} {% if state_info.w %} WHITE={state_info.w} {% endif %}
      {% endif %}
    {% endif %}
  {% endfor %}

[gcode_macro leds_state_wrapper]
gcode:
#SET_LEDS_BY_NAME rawparams: TYPE=ENTER WHEN=IDLE LAST_STATUS=homing NEXT_STATUS=ready, warehouse|off -> {'colour': 'off'}}
  {% set state = params.NEXT_STATUS|default('ready')|lower() %}
  set_leds_by_state state={state}


[gcode_macro leds_state_wrapper_register]
gcode:
      gcode_on_print_status status={printer["gcode_macro _km_print_status"].status_list|join(",")} type=enter command=leds_state_wrapper args=1 when=always


#	Set RGB values on boot up for each Neopixel. 
#	Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
#      printer["gcode_macro _km_print_status"].status_list
    SET_LEDS_BY_STATE STATE=standby
       #RESPOND PREFIX="setdisplayneopixel" MSG={printer["gcode_macro _km_print_status"].status_list.join(",")}
    {% if printer["gcode_macro _km_print_status"] %}
      leds_state_wrapper_register
    {% endif %}