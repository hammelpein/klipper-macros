[gcode_macro _chamber_debug]
gcode:
  {% set cfg_lvl = printer["gcode_macro _km_globals"].chamber_cfg.debug|default(0)|int %}

  {% set lvl = params.LVL|default(0)|int %}
  {% set msg = params.MSG|default("hello world")|string %}
  # RESPOND PREFIX="// _chamber_debug" msg="{'params: %s, cfg_lvl = %d' %(params, cfg_lvl}"

  {% if lvl <= cfg_lvl %}
    RESPOND PREFIX="// CHAMBER_TEMPERATURE" msg="{msg}"
  {% endif %}

[gcode_macro chamber_temperature]
variable_target: 0.0
description: Control Chamber Temperature (with wait for heating).
  Usage: CHAMBER_TEMPERATURE [TARGET=<target>] [WAIT=<True|False>] [PREHEAT=<True|False>]
gcode:
  {% set cfg = printer["gcode_macro _km_globals"].chamber_cfg %}
  {% set ambient = cfg.ambient.fixed|default(20.0)|float %}
  {% set max_temp = ambient %}

  _chamber_debug lvl=2 msg="{'params: %s' % (params)}"

  {% set TARGET = params.TARGET|default(printer["gcode_macro chamber_temperature"])|float %}
  {% if params.TARGET %}
    _chamber_debug lvl=1 msg="{'storing target: %.2f°C' % (TARGET)}"
    SET_GCODE_VARIABLE MACRO=chamber_temperature VARIABLE=target VALUE={TARGET}
  {% endif %}
  {% set temps = [] %}
  {% for c in cfg.ctl %}
    _chamber_debug lvl=2 msg="{'%s' % (c)}"
    {% if params.TARGET %}
      {% set TARGET = params.TARGET|float %}
      SET_GCODE_VARIABLE MACRO=chamber_temperature VARIABLE=target VALUE={TARGET}
      {% set t = TARGET * cfg.ctl[c].mult|default(1.0)|float +
        cfg.ctl[c].offset|default(0.0)|float %}
      {% set cmd = 'SET_%s_TARGET' % cfg.ctl[c].type|string|upper %}
      _chamber_debug lvl=2 msg="{'%s -> %.2f°C using %s' % (c, t, cmd)}"
      {cmd} {cfg.ctl[c].type|string|upper}={c} TARGET={t}
    {% endif %}
    {% if "heater" in cfg.ctl[c].type|string|lower %}
      _chamber_debug lvl=2 msg="{'%s is a heater' % (c)}"
      {% set max_temp = [printer['%s %s' % (cfg.ctl[c].type, cfg.ctl[c].name)].target , max_temp]|max %}
    {% endif %}
  {% else %}
    _chamber_debug lvl=2 msg="Nothing to control!"

  {% endfor %}

  {% if max_temp < TARGET %}
    {% for helper_name in cfg.helpers %}
      {% set helper_cfg = cfg.helpers[helper_name] %}
      {% set helper = printer[helper_name] %}
      {% set t = ([(helper.target - ambient), 0]|max) * helper_cfg.mult|default(1.0)|float +
        helper_cfg.offset|default(0.0)|float %}
      _chamber_debug lvl=2 msg="{'helper %s target: %.2f°C supports up to %.2f°C delta' % (helper_name, helper.target, t)}"
      {% set dummy = temps.append(t) %}
    {% endfor %}
    _chamber_debug lvl=2 msg="{'temps: %s, ambient: %.2f°C, max_temp: %.2f°C -> %.2f°C' % (temps, ambient, max_temp, temps|sum + max_temp)}"
    {% set max_temp = temps|sum + max_temp %}
  {% else %}
      _chamber_debug lvl=2 msg="{'max_temp: %.2f°C < TARGET: %.2f°C' % (max_temp, TARGET)}"

  {% endif %}





  {% set waits = {} %}
  {% if params.WAIT %}
    {% for dir in cfg.sensor.grace %}
      {% if max_temp > TARGET + cfg.sensor.grace[dir]|float %}
        {% set dummy = waits.__setitem__(dir|upper, TARGET + cfg.sensor.grace[dir]|float) %}
      {% else %}
        _chamber_debug lvl=1 msg="{'Ignoring WAIT as max_temp: %.2f°C lower than required: %.2f°C' % (max_temp, TARGET + cfg.sensor.grace[dir]|float)}"
      {% endif %}
    {% endfor %}
  {% endif %}  

  {% for dir in params|select('in',['MAXIMUM','MINIMUM'])|list%}
    {% set dummy = waits.__setitem__(dir|upper, params[dir]|float) %}
  {% endfor %}  

  _chamber_debug lvl=2 msg="{'waits: %s' % (waits)}"

  {% if waits|length %}
    {% set sensor = printer['%s %s' % (cfg.sensor.type, cfg.sensor.name)] %}
    {% if ( 'MINIMUM' in waits and sensor.temperature < waits["MINIMUM"]) or ( 'MAXIMUM' in waits and sensor.temperature > waits["MAXIMUM"]) %}

      {% if params.PREHEAT %}
        _chamber_debug lvl=1 msg="{'Preheating: chamber @%.2f°C, req: %s' % (sensor.temperature, waits) }"
        {% if "pos" in cfg.preheat %}
          _chamber_debug lvl=2 msg="preheat pos {% for a in cfg.preheat.pos %} {' %s%f' % (a, cfg.preheat.pos[a])} {% endfor %}"
          G1 F{printer["gcode_macro _km_globals"].travel_speed_xy|default(12000)} {% for a in cfg.preheat.pos %} {' %s%f' % (a, cfg.preheat.pos[a])} {% endfor %}
        {% else %}
          _chamber_debug lvl=2 msg="preheat: no pos defined"
        {% endif %}
        {% for fan_name in cfg.preheat.fans %}
          {% set fan_speed = cfg.preheat.fans[fan_name] %}
          {% if "fan" == fan_name %}
            {% set fan_cmd = 'M106 S%d' % ((fan_speed * 255)|int) %}
          {% else %}
            {% set fan_cmd = 'SET_FAN_SPEED FAN="%s" SPEED=%f' % (fan_name, fan_speed) %}
          {% endif %}
          _chamber_debug lvl=2 msg="{'preheat dependency fan: %s' % (fan_cmd)}"
          {fan_cmd}
        {% else %}
          _chamber_debug lvl=2 msg="preheat: no fans defined"
        {% endfor %}
      {% endif %}


      _chamber_debug lvl=1 msg="wait for {cfg.sensor.name} to reach {% for dir in waits %} {' %s=%f°C' % (dir, waits[dir])} {% endfor %}"
      _KM_PRINT_STATUS ACTION=PUSH_STATUS
      _KM_PRINT_STATUS ACTION=CHANGE STATUS=chamber_heating
      temperature_wait SENSOR="{cfg.sensor.name}" {% for dir in waits %} {' %s=%f' % (dir, waits[dir])} {% endfor %}
      _KM_PRINT_STATUS ACTION=CHANGE STATUS=pop_status

      {% if params.PREHEAT %}
        _chamber_debug lvl=1 msg="Preheating DONE"
        {% for fan_name in cfg.preheat.fans %}
          {% set fan_speed = cfg.preheat.fans[fan_name] %}
          {% if "fan" == fan_name %}
            {% set fan_cmd = 'M106 S0' %}
          {% else %}
            {% set fan_cmd = 'SET_FAN_SPEED FAN="%s" SPEED=0' % (fan_name) %}
          {% endif %}
          _chamber_debug lvl=2 msg="{'preheat dependency fan: %s' % (fan_cmd)}"
          {fan_cmd}
        {% else %}
          _chamber_debug lvl=2 msg="preheat: no fans defined"
        {% endfor %}
      {% endif %}
    {% else %}
      _chamber_debug lvl=1 msg="already at temp"
    {% endif %}
  {% endif %}
  #  _GCODE_WAIT_WRAPPER HEATER=chamber {%
  #    for k in params %}{' '~k~'="'~params[k]~'"'}{% endfor %}
