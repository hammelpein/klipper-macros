[gcode_macro printer_dump]
gcode:

  {% for name1 in printer %}
    {% for name2 in printer[name1] %}
      { action_respond_info("printer['%s'].%s = %s"
                               % (name1, name2, printer[name1][name2])) }
    {% else %}
      { action_respond_info("printer['%s'] = %s" % (name1, printer[name1])) }
    {% endfor %}
  {% endfor %}

[gcode_macro INPUT_SHAPER_SET]
gcode:
    
    {% set ENABLE = params.ENABLE|default(True)|int %}
    {% set FREQ_X = params.FREQ_X|default(printer['configfile'].settings.input_shaper.shaper_freq_x if ENABLE else 0)|float %}
    {% set FREQ_Y = params.FREQ_Y|default(printer['configfile'].settings.input_shaper.shaper_freq_y if ENABLE else 0)|float %}
    {% set TYPE_X = params.TYPE_X|default(printer['configfile'].settings.input_shaper.shaper_type_x if ENABLE else "zv")|string %}
    {% set TYPE_Y = params.TYPE_Y|default(printer['configfile'].settings.input_shaper.shaper_type_y if ENABLE else "zv")|string %}
    {% set RATIO_X = params.RATIO_X|default(printer['configfile'].settings.input_shaper.damping_ratio_x if ENABLE else 0)|float %}
    {% set RATIO_Y = params.RATIO_Y|default(printer['configfile'].settings.input_shaper.damping_ratio_y if ENABLE else 0)|float %}

    { action_respond_info( "ENABLE: %d, FREQ_X: %f, FREQ_Y: %f, TYPE_X: %s, TYPE_Y: %s, RATIO_X: %f, RATIO_Y: %f" % ( ENABLE,
    FREQ_X,
    FREQ_Y,
    TYPE_X,
    TYPE_Y,
    RATIO_X,
    RATIO_Y) )}

    SET_INPUT_SHAPER SHAPER_FREQ_X={FREQ_X} SHAPER_FREQ_Y={FREQ_Y} DAMPING_RATIO_X={RATIO_X} DAMPING_RATIO_Y={RATIO_Y} SHAPER_TYPE_X={TYPE_X} SHAPER_TYPE_Y={TYPE_Y}
    