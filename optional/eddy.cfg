# This macro automates a lot of the frequency mapping process and simplifies the steps significantly.
[gcode_macro EDDY_CURRENT_CALIBRATE]
gcode: # This line is required by Klipper.
  {% set BED=params.BED|default(0)|int %}
  {% set CHAMBER=params.CHAMBER|default(0)|int %}
  {% set HOTEND=params.HOTEND|default(0)|int %}
  {% set CHIP=params.CHIP|default(params.PROBE)|default("eddy_probe")|string %}


  {% if 'HOTEND' in params %}
     M104 S{HOTEND}
  {% endif %}
  
  {% if 'BED' in params %}
     M140 S{BED}
  {% endif %}
  
  BED_MESH_CLEAR
  G90 # Abs positioning
  G28

  {% if 'CHAMBER' in params %}
      {% if CHAMBER > 0 %}  
          CHAMBER_TEMPERATURE WAIT=1 TARGET={CHAMBER} PREHEAT=1
      {% else %}
          CHAMBER_TEMPERATURE TARGET={CHAMBER}
      {% endif %}
  {% endif %}

  {% if HOTEND > 0 %}  
    M109 S{HOTEND}
  {% endif %}
  {% if BED > 0 %}  
    M190 S{BED}
  {% endif %}

  G1 X{ printer.toolhead.axis_maximum.x/2 } Y{ printer.toolhead.axis_maximum.y/2 } F6000
  {% if 'z' not in printer.toolhead.homed_axes %}
    SET_KINEMATIC_POSITION Z={ printer.toolhead.axis_maximum.z-1 } # Allows the user to work it down until it touches.
  {% endif %}

  PROBE_EDDY_CURRENT_CALIBRATE CHIP={CHIP}
  TURN_OF_HEATERS
  TURN_OFF_FANS
  CHAMBER_TEMPERATURE TARGET={30}



[gcode_macro QUAD_GANTRY_LEVEL]
rename_existing: _QUAD_GANTRY_LEVEL
gcode:

  {% set METHOD = params.METHOD|default("rapid_scan")|lower|string %}
  {% set REHOME_Z = "rehome COUNT=1" if "rehome" in printer['gcode_macro list_macros'].macros else "G28 Z" %}

  SAVE_GCODE_STATE NAME=STATE_QGL
    BED_MESH_CLEAR

  {% set add_params = [] %}
  {% if not 'METHOD' in params %}
    {% set dummy = params.update({'METHOD': METHOD}) %}
    {% set dummy = add_params.append('METHOD=%s' %(METHOD)) %}
  {% endif %}
  {% if METHOD|lower == "rapid_scan" %}
    RESPOND PREFIX="// QGL" msg="{'METHOD = %s' % (METHOD)}"
    {% if not 'HORIZONTAL_MOVE_Z' in params %}
      RESPOND PREFIX="// QGL" MSG="{'printer.probe.name = %s' % (printer.probe.name)}"
      RESPOND PREFIX="// QGL" MSG="{'printer.configfile.settings[printer.probe.name].z_offset = %s' % (printer.configfile.settings[printer.probe.name].z_offset)}" 
      {% set dummy = params.update({'HORIZONTAL_MOVE_Z': (9.6 - printer.configfile.settings[printer.probe.name].z_offset)}) %}
      {% set dummy = add_params.append('HORIZONTAL_MOVE_Z=%.3f' % ( 9.6 - printer.configfile.settings[printer.probe.name].z_offset)) %}
    {% endif %}
    {% if not 'ADAPTIVE' in params %}
      RESPOND PREFIX="// QGL" MSG="ADD: ADAPTIVE = 1"
      {% set dummy = params.update({'ADAPTIVE': 1}) %}
      {% set dummy = add_params.append('ADAPTIVE=1') %}
    {% endif %}
  {% endif %}

  RESPOND PREFIX="// QGL" MSG="{'rawparams -> %s, add_params -> %s' %(rawparams, add_params) }"

  {% if not printer.quad_gantry_level.applied and METHOD == "rapid_scan" %}
    RESPOND PREFIX="// QGL" MSG="-> QUAD_GANTRY_LEVEL RETRY_TOLERANCE=1.0"
    _QUAD_GANTRY_LEVEL RETRY_TOLERANCE=1.0
    RESPOND PREFIX="// QGL" MSG="{'-> %s' % (REHOME_Z) }"
    G28 Z
  {% endif %}
  
  RESPOND PREFIX="// QGL" MSG="{'-> QUAD_GANTRY_LEVEL %s %s' % (rawparams, add_params|join(' ')) }"
  {'_QUAD_GANTRY_LEVEL %s %s' % (rawparams, add_params|join(' ')) }

  RESPOND PREFIX="// QGL" MSG="{'-> %s' % (REHOME_Z) }"
  G28 Z
  RESTORE_GCODE_STATE NAME=STATE_QGL
